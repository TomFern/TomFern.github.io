<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chaos is order not yet deciphered</title><link>/</link><description>Recent content on Chaos is order not yet deciphered</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 14 Nov 2020 07:00:00 -0300</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Always use ImagePullSecrets</title><link>/posts/always-use-imagepullsecrets/</link><pubDate>Sat, 14 Nov 2020 07:00:00 -0300</pubDate><guid>/posts/always-use-imagepullsecrets/</guid><description>Docker Hub introduced rate limits for image pulls earlier this month. Being the default registry for Docker images, this is one of the biggest in the ecosystem in the last few years, and it will affect not only Docker users but also Kubernetes setups.
The limits ðŸ”—The new limits affect free users. No more unlimited free pulls, the party is over.
Anonymous free users: 100 container pulls every 6 hours.</description></item><item><title>Programming humans</title><link>/posts/programming-humans/</link><pubDate>Tue, 03 Nov 2020 07:00:00 -0300</pubDate><guid>/posts/programming-humans/</guid><description>While working on the slides for the talk I gave a few weeks ago, it occurred to me that writing and coding have more than a few things in common. I originally planned to speak a bit about that but had to take it out for lack of space. I&amp;rsquo;ll make a post instead, this one.
Thinks in common ðŸ”—Language
Both writing and coding use a language. Writing happens in any of the hundreds of languages people speak all over the world.</description></item><item><title>Talk: Technical writing in English</title><link>/posts/talk-technical-writing-in-english/</link><pubDate>Wed, 21 Oct 2020 07:00:00 -0300</pubDate><guid>/posts/talk-technical-writing-in-english/</guid><description>I gave a talk about technical writing at nerdear.la, a bilingual convention about technology and people that took place October 2020 in Argentina.
The Talk ðŸ”—The slides are in English, the talk is in Spanish. At the end of the talk, I&amp;rsquo;ll be answering questions.
Slides ðŸ”—You may download the slides here. You may use them or modify them, but if you do, please make the appropiate attribution.</description></item><item><title>React Native and Expo</title><link>/posts/react-native-and-expo/</link><pubDate>Tue, 01 Sep 2020 23:46:37 +0000</pubDate><guid>/posts/react-native-and-expo/</guid><description>Mobile development on the console with React Native ðŸ”—Iâ€™ve started my career as a backend developer. Pretty early on, I had to get familiar the console and chose Vim as my main editor. Afterwards, as a sysadmin and dba I lived in ssh sessions. Itâ€™s great, I love it, but when itâ€™s time to switch to the frontend I struggle.
Imagine my hapiness when I found about a project that lets me code for mobile without leaving the command line.</description></item><item><title>What Got Me Writing</title><link>/posts/what-got-me-writing/</link><pubDate>Sat, 08 Aug 2020 07:00:00 -0300</pubDate><guid>/posts/what-got-me-writing/</guid><description>When I started freelancing, I never imagined I would end up writing for a living. Never in a hundred years. Yet, I&amp;rsquo;ve been doing it full-time for almost a year now.
I got interested in freelancing because I wanted to try something different. I needed a break from the office routine. The job was OK. I had excellent colleagues and was friends with everyone. And while it wasn&amp;rsquo;t making me rich by any means, I never lacked for anything.</description></item><item><title>7 Minikube Tips</title><link>/posts/7-minikube-tips/</link><pubDate>Sun, 28 Jun 2020 14:04:00 -0300</pubDate><guid>/posts/7-minikube-tips/</guid><description>I love my Arch Linux, which I&amp;rsquo;ve been using it for years, more than I care to count. But sometimes I believe that all of us Linux users, deep in our heart of hearts, have some Windows- or Mac-only software that we covet.
For me, that software is Docker Desktop; not much for the sake of Docker, but mainly for the standalone Kubernetes cluster.
I&amp;rsquo;m afraid I can&amp;rsquo;t give you Docker Desktop for Linux, but I&amp;rsquo;ll offer the next best thing instead:</description></item><item><title>10 Vim Plugins for Writers</title><link>/posts/10-vim-plugins-for-writers/</link><pubDate>Sun, 15 Dec 2019 14:04:00 -0300</pubDate><guid>/posts/10-vim-plugins-for-writers/</guid><description>I still remember the first time I came in contact with Vim; it was during my very first job. It was a part-time gig in a government office. A few months in, they decided to go open-source full in. Out the window went Windows and in came Linux. At the time, I was doing PHP development, and I was sorry to have to let go of my dear Dreamweaver.
I decided that if I had to work on Linux, I would go all the way, no compromises for me.</description></item><item><title>Case study: MariaDB ColumnStore</title><link>/posts/case-study-mariadb-columnstore/</link><pubDate>Mon, 04 Mar 2019 15:29:00 -0300</pubDate><guid>/posts/case-study-mariadb-columnstore/</guid><description>A recent project I worked on provided an opportunity to work with MariaDB ColumnStore.
The Product ðŸ”—The product is a business intelligence application. Its main view, a very comprehensive dashboard with an abundance of counters, showing all operational aspects: from server status, database backups, support tickets and SLA to datacenter atmospheric conditions.
In the middle of all this: several MariaDB databases fed through multiple ETL jobs.
As the application grew, the dashboard got increasingly more intricate.</description></item><item><title>Making the most out of Docker</title><link>/posts/making-the-most-out-of-docker/</link><pubDate>Sat, 02 Feb 2019 11:21:00 -0300</pubDate><guid>/posts/making-the-most-out-of-docker/</guid><description>Some options that might increase performance, some that don&amp;rsquo;t.
Network ðŸ”—Containers get connected to a bridge network by default. A software bridge that allows communication between containers running on the same host &amp;amp; bridge. We can also create and use custom bridges, to create isolated groups of containers. To allow connections from outside, we must map the host&amp;rsquo;s ports to a container&amp;rsquo;s with -p (publish e.g. -p 3306:3306) This is easy and flexible, but it makes Docker start an additional process (docker-proxy), which can use a non-trivial amount of CPU.</description></item><item><title>A Container for My Databases</title><link>/posts/a-container-for-my-databases/</link><pubDate>Fri, 18 Jan 2019 17:59:00 -0300</pubDate><guid>/posts/a-container-for-my-databases/</guid><description>Who doesn&amp;rsquo;t like containers? Anyone doesn&amp;rsquo;t like to have most of the benefits of virtual machines with much, much less overhead?
They&amp;rsquo;ve been around since forever (anyone still remember chroot?) but only in recent years their popularity boomed, mainly due to cloud computing, I&amp;rsquo;m sure.
I&amp;rsquo;ve been running databases in docker for a while now. I was curious about other alternatives, so I did a bit of benchmarking.
Docker ðŸ”—It&amp;rsquo;s not a coincidence that Docker appeared around the same time container technology began its popularity rise.</description></item><item><title>The Cost of Idle Indexes</title><link>/posts/the-cost-of-idle-indexes/</link><pubDate>Wed, 16 Jan 2019 12:36:00 -0300</pubDate><guid>/posts/the-cost-of-idle-indexes/</guid><description>The last few days I&amp;rsquo;ve been cleaning up indexes. This entails removing duplicate, unused or redundant indexes.
There were quite a lot of indexes, so it was hard work. I knew why this was important to do: as the table changes, indexes need to be kept updated, less indexes means less updates and less wasted resources.
But I wanted to have a real number to attach to the theory. How much benefit is there really?</description></item><item><title>Unused Index cleanup</title><link>/posts/unused-index-cleanup/</link><pubDate>Wed, 09 Jan 2019 16:15:00 -0300</pubDate><guid>/posts/unused-index-cleanup/</guid><description>Fixing a query by finding the right index feels great, as if by magic, things are blazing fast again.
But indexes, like everything in life, needs balancing. As things inevitably change, some indexes will be left abandoned and unused. What happens then? Well, the database engine must keep them updated regardless, that&amp;rsquo;s wasted I/O. They also take up space. Pruning indexes is the life of any dba.
Unused Indexes in MySQL ðŸ”—Fortunately in MySQL has are two great tools: the performance_schema, which collects all kind of metrics and the sys schema which offers easier-to-read views.</description></item><item><title>Sysbench for databases</title><link>/posts/sysbench-for-databases/</link><pubDate>Wed, 09 Jan 2019 00:13:00 -0300</pubDate><guid>/posts/sysbench-for-databases/</guid><description>This is my second part of the sysbench guide, I&amp;rsquo;ll cover here some basic benchmarks for databases. Feel free to check my first part for an introduction.
Connecting to the DB ðŸ”—First things first, we&amp;rsquo;ll need a test database. We&amp;rsquo;ll stick to the default &amp;ldquo;sbtest&amp;rdquo;, so go ahead and create it. I&amp;rsquo;ll wait.
Now sysbench needs the connection parameters. The actual values depend on the target. Sysbench supports MySQL and postgreSQL.</description></item><item><title>Benchmarking with sysbench</title><link>/posts/benchmarking-with-sysbench/</link><pubDate>Wed, 09 Jan 2019 00:05:00 -0300</pubDate><guid>/posts/benchmarking-with-sysbench/</guid><description>Why, When, How? ðŸ”—Benchmark shows the difference between should and does. Coupled with monitoring it&amp;rsquo;s a great tool to identify bottlenecks.
As to when: whenever we can, as long as the system is production. A good benchmark will stress the server so we don&amp;rsquo;t want users affected. Right after provisioning a server, during a maintenance window, before and after any major changes, these are all good opportunities to take advantage of a few precious minutes of calm to run some tests.</description></item><item><title>MySQLSlap (part 1)</title><link>/posts/mysqlslap-part-1/</link><pubDate>Tue, 08 Jan 2019 00:20:00 -0300</pubDate><guid>/posts/mysqlslap-part-1/</guid><description>There are loads of ways to benchmark MySQL. mysqlslap was, I believe, one of the first official tools for this. It&amp;rsquo;s bundled with the client tools for MySQL and MariaDB, so you probably already have it installed.
In this post I&amp;rsquo;ll cover the basics and the auto generate sql mode, be sure to read the second part about other ways to use it.
How Does It Work? ðŸ”—mysqlslap uses the same connection parameters as the normal mysql client, so --host --port --socket --username --password all work (but strangely the --defaults-file doesn&amp;rsquo;t).</description></item><item><title>MySQLSlap (part 2)</title><link>/posts/mysqlslap-part-2/</link><pubDate>Tue, 08 Jan 2019 00:20:00 -0300</pubDate><guid>/posts/mysqlslap-part-2/</guid><description>This is the second part of my mysqlslap guide, you can read the first part
mysqlslap uses the same connection parameters as the normal mysql client, so --host --port --socket --username --password work. In the examples below the parameters will be omitted for brevity&amp;rsquo;s sake.
The Query Mode ðŸ”—Query mode allow us to benchmark ad-hoc queries. It&amp;rsquo;s a quick way to troubleshoot a troublesome query.
In its simplest form we pass the query:</description></item><item><title>System Monitoring with Sar</title><link>/posts/system-monitoring-with-sar/</link><pubDate>Mon, 07 Jan 2019 01:40:00 -0300</pubDate><guid>/posts/system-monitoring-with-sar/</guid><description>sar is part of the sysstat project, a suite of programs for system monitoring. With sar, we can log system activity, build performance reports and even make plots.
sar is available on Linux, Solaris, AIX and HP-UX.
We can choose to run sar automatically, as an unattended script. Or interactively and get system metrics on the spot.
Unattended Mode ðŸ”—With a simple cron entry we can log system activity. If possible, as root, otherwise some data may be missing.</description></item><item><title>A guide to vmstat and friends</title><link>/posts/a-guide-to-vmstat-and-friends/</link><pubDate>Sun, 06 Jan 2019 21:12:00 -0300</pubDate><guid>/posts/a-guide-to-vmstat-and-friends/</guid><description>A getting started guide for vmstat, iostat, mpstat and pidstat.
vmstat ðŸ”—Once I figured out how vmstat works, I found that I almost could no longer live without it, it&amp;rsquo;s that good. Fortunately it&amp;rsquo;s available everywhere, so I don&amp;rsquo;t. There are many versions around, both for Linux and Unix.
vmstat does a little bit of everything: memory, processes, I/O, swap, disks, CPU.
The basic syntax is:
vmstat [options] &amp;lt;interval&amp;gt; &amp;lt;count&amp;gt; vmstat prints a new update every interval seconds, stopping after count lines.</description></item><item><title>Welcome, welcome &amp; welcome</title><link>/posts/welcome-welcome-welcome/</link><pubDate>Sat, 05 Jan 2019 21:08:00 -0300</pubDate><guid>/posts/welcome-welcome-welcome/</guid><description>Hey! Did I say welcome already? Glad you&amp;rsquo;re here.
So, about blogging: three things moved me to start doing it.
Number one, I&amp;rsquo;ve been turning in essays during my Portuguese classes, every week. Right now I&amp;rsquo;m on vacation and feeling the writing bug.
Number two, learning. For me, experience and explaining are the best roads to learning. We all get experience, living and working, everyday. Sometimes we can choose what or where, sometimes not.</description></item><item><title/><link>/posts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/</guid><description>I&amp;rsquo;ve collected a lot of random thoughts and notes about writing over the last few months, which I&amp;rsquo;ve been meaning to turn into a full-sized post. Today I realized it&amp;rsquo;ll never fit on a single post, so I&amp;rsquo;ll just do it as a series.
Let&amp;rsquo;s start with the beginning.
I spent so much time doing things of little value.
If you can read, you can write. It doesn&amp;rsquo;t take a university degree to be able to write.</description></item></channel></rss>