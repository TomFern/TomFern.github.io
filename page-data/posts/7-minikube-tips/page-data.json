{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/7-minikube-tips","result":{"data":{"markdownRemark":{"id":"95e3ba45-71c1-5156-8387-41bbb8fd3aa0","html":"<p>I love my Arch Linux, which Iâ€™ve been using it for years, more than I care to count. But sometimes I believe that all of us, Linux users, deep in our heart of hearts, have some Windows- or Mac-only software that we covet.</p>\n<p>For me, that software is Docker Desktop; not much for the sake of Docker, but mainly for the standalone Kubernetes cluster.</p>\n<p>Iâ€™m afraid I canâ€™t give you Docker Desktop for Linux, but Iâ€™ll offer the next best thing instead: </p>\n<h2 id=\"7-tips-to-get-the-most-out-of-minikube\" style=\"position:relative;\"><a href=\"#7-tips-to-get-the-most-out-of-minikube\" aria-label=\"7 tips to get the most out of minikube permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7 tips to get the most out of Minikube</h2>\n<p><strong>Use the Dashboard</strong></p>\n<p>This is one of the best features for me. Type <code class=\"language-text\">minikube dashboard &amp;</code>, which starts the Web UI that lets you manage all your Kubernetes resources. You can even start a terminal in a pod for a quick debug.</p>\n<p><img src=\"/media/img/minikube-dashboard.png\" alt=\"Dashboard\"></p>\n<p><strong>Periodically Reset Minikube</strong></p>\n<p>Every now and then, delete the cluster with <code class=\"language-text\">minikube delete</code> and start a new one with <code class=\"language-text\">minikube start</code>. Iâ€™ve been bitten by strange networking problems that cleared up everytime after resetting the cluster.</p>\n<p><strong>SSH to the VM</strong></p>\n<p><a href=\"https://kubernetes.io/docs/setup/learning-environment/minikube/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Minikube</a> runs a single-node Kubernetes on your laptop. Sometimes we need to log in to the VM to get a closer look. The problem is that it runs in headless mode, so we donâ€™t have a terminal window. But Minikube has a built-in ssh command for this: <code class=\"language-text\">minikube ssh</code></p>\n<p><strong>File Sync</strong></p>\n<p>If you put a file in <code class=\"language-text\">$HOME/.minikube/files</code> it will automatically be copied into the VM when you start the cluster. </p>\n<p>For instance you can override the DNS servers in the VM like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> -p ~/.minikube/files/etc\n$ <span class=\"token builtin class-name\">echo</span> nameserver <span class=\"token number\">1.1</span>.1.1 <span class=\"token operator\">></span> ~/.minikube/files/etc/resolv.conf\n$ minikube start</code></pre></div>\n<p><strong>Automount $HOME</strong></p>\n<p>Did you know that if you start Minikube with <code class=\"language-text\">minikube start --mount</code> it automatically mounts <code class=\"language-text\">$HOME</code> in the VM? On my machine, home gets mapped to <code class=\"language-text\">/minikube-host</code> (which is different that <a href=\"https://minikube.sigs.k8s.io/docs/handbook/mount/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documented path</a>).</p>\n<p>You can also mount any directory with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minikube <span class=\"token function\">mount</span> /path/on/host:/path/on/vm <span class=\"token operator\">&amp;</span></code></pre></div>\n<p><strong>Try Different Versions</strong></p>\n<p>Itâ€™s a good idea to always use the same Kubernetes version that you have in production. You can change the local version with <code class=\"language-text\">--kubernetes-version</code>. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minikube start --kubernetes-version<span class=\"token operator\">=</span><span class=\"token string\">\"v1.18.5\"</span></code></pre></div>\n<p><strong>Connect with Tunnel</strong></p>\n<p> If you ever created a load balancer service, you may have noticed that the EXTERNAL-IP is forever pending:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME         TYPE           CLUSTER-IP     EXTERNAL-IP    PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\nmy-service   LoadBalancer   <span class=\"token number\">10.97</span>.97.121   <span class=\"token operator\">&lt;</span>pending<span class=\"token operator\">></span>      <span class=\"token number\">80</span>:32446/TCP   88s</code></pre></div>\n<p>At first, I didnâ€™t pay much attention to that, I just used the links provided <code class=\"language-text\">minikube service --url SERVICE_NAME</code>.</p>\n<p>But see what happens if we first start a tunnel (do this on a second terminal)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minikube tunnel</code></pre></div>\n<p>Now suddenly the LoadBalancer service has a connectable IP:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get <span class=\"token function\">service</span>\nNAME         TYPE           CLUSTER-IP     EXTERNAL-IP    PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>        AGE\nmy-service   LoadBalancer   <span class=\"token number\">10.97</span>.97.121   <span class=\"token number\">10.97</span>.97.121   <span class=\"token number\">80</span>:32446/TCP   88s</code></pre></div>\n<!-- The service has a valid IP now, and that's not all, you can connect to it as long as the tunnel is running. -->\n<!-- \nWhy I want it when I can just port forward?\nminikube tunnel\nminikube tunnel --cleanup\nkubectl port-forward POD PORT:PORT -->\n<!-- - Addons, did you know minikube has addons? I didn't.\nminikube addons list\nminikube addons enable metrics-server -->\n<hr>\n<p>Iâ€™m glad we have Minikube; itâ€™s an excellent way to try out Kubernetes and develop applications. I hope these tips help you get the most out of it.</p>\n<p>-Tomas ðŸ‘‹ </p>","fields":{"slug":"/posts/7-minikube-tips","tagSlugs":["/tag/minikube/","/tag/kubernetes/"]},"frontmatter":{"date":"2020-06-28T14:04:00-03:00","description":"A mix of tips and less know features.","tags":["minikube","kubernetes"],"title":"7 Minikube Tips","socialImage":"/social/minikube.png"}}},"pageContext":{"slug":"/posts/7-minikube-tips"}}}