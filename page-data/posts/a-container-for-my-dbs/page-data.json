{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/a-container-for-my-dbs","result":{"data":{"markdownRemark":{"id":"b5a1d0a3-bdd5-57b7-9d2f-6d41d9091d42","html":"<p>Who doesn’t like containers? Anyone doesn’t like to have most of the benefits of virtual machines with much, much less overhead?</p>\n<p>They’ve been around since forever (anyone still remember chroot?)\nbut only in recent years their popularity boomed, mainly due to cloud computing, I’m sure.</p>\n<p>I’ve been running databases in docker for a while now. I was curious about other alternatives, so I did a bit of benchmarking.</p>\n<h2 id=\"docker\" style=\"position:relative;\"><a href=\"#docker\" aria-label=\"docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h2>\n<p>It’s not a coincidence that Docker appeared around the same time container technology began its popularity rise.</p>\n<p>It’s main selling point is its easy of use and an enormous ecosystem of ready to use images.</p>\n<h2 id=\"rkt\" style=\"position:relative;\"><a href=\"#rkt\" aria-label=\"rkt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rkt</h2>\n<p>rkt is an interesting alternative to Docker. rkt has the same features and can even download and run Docker images.</p>\n<p>rkt takes security-minded approach to containers. It supports signed images, a feature sorely needed in Docker.</p>\n<h2 id=\"lxc\" style=\"position:relative;\"><a href=\"#lxc\" aria-label=\"lxc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LXC</h2>\n<p>LXC (linux containers) is the technology that was originally behind docker.</p>\n<p>LXC just runs containers, that’s it. We can regain some of Docker-like features if we mix in some additional\ncomponents like LXD (hypervisor and management) and LXCFS (an overlay filesystem).\nFor snapshots we can use LVM or an snapshot-capable filesystem.</p>\n<h2 id=\"systemd-spawn\" style=\"position:relative;\"><a href=\"#systemd-spawn\" aria-label=\"systemd spawn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>systemd-spawn</h2>\n<p>systemd-nspawn is “chroot on steroids”.\nA much simpler tool, it doesn’t provide any form of image management. It requires a more DIY approach, we need to set up everything by ourselves.</p>\n<p>nspawn, unlike chroot, does provide a network virtualization and it’s capable of fully booting a linux container.</p>\n<p>It’s a lightweight alternative worth considering if your linux distribution uses systemd.</p>\n<h2 id=\"benchmarks\" style=\"position:relative;\"><a href=\"#benchmarks\" aria-label=\"benchmarks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Benchmarks</h2>\n<p>The databases tested are MariaDB 10.3.12 and Postgres 11.1.</p>\n<p>I’m using <a href=\"./sysbench-guide-2\">sysbench</a>’s OLTP read+write test, using 1 and 10 threads.\nI’ve run each test 3 times, 20 minutes each test. The graph consists of the max, median and min <em>average</em> TPS values.</p>\n<h3 id=\"single-thread\" style=\"position:relative;\"><a href=\"#single-thread\" aria-label=\"single thread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single thread</h3>\n<p><img src=\"/media/plots/a-container-for-my-dbs/mariadb-rw-1.png\" alt=\"MariaDB 1 Thread\">\n<img src=\"/media/plots/a-container-for-my-dbs/postgres-rw-1.png\" alt=\"PostgreSQL - 1 thread\"></p>\n<p>I was surprised that docker did so well, I wouldn’t have been shocked if it were the worst, but it performed best.</p>\n<h3 id=\"10-threads\" style=\"position:relative;\"><a href=\"#10-threads\" aria-label=\"10 threads permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10 Threads</h3>\n<p>How does performance change with a higher thread count?</p>\n<p><img src=\"/media/plots/a-container-for-my-dbs/mariadb-rw-10.png\" alt=\"MariaDB - 10 threads\">\n<img src=\"/media/plots/a-container-for-my-dbs/postgres-rw-10.png\" alt=\"PostgreSQL - 10 threads\"></p>\n<p>A higher load tends to even out things. Docker suffers a bit more with MariaDB.\nAll in all it doesn’t look like there is much of a speed difference between container types.</p>\n<h2 id=\"related-links\" style=\"position:relative;\"><a href=\"#related-links\" aria-label=\"related links permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related links</h2>\n<ul>\n<li>benchmark data:  <a href=\"https://github.com/TomFern/benchmark-data/tree/master/a-container-for-my-dbs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/TomFern/benchmark-data/tree/master/a-container-for-my-dbs</a></li>\n<li>docker: <a href=\"https://docs.docker.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.docker.com/</a></li>\n<li>lxc: <a href=\"https://linuxcontainers.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://linuxcontainers.org/</a></li>\n<li>rkt: <a href=\"https://coreos.com/rkt/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://coreos.com/rkt/</a></li>\n<li>systemd-nspawn: <a href=\"https://wiki.archlinux.org/index.php/systemd-nspawn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://wiki.archlinux.org/index.php/systemd-nspawn</a></li>\n</ul>\n<h2 id=\"thats-it\" style=\"position:relative;\"><a href=\"#thats-it\" aria-label=\"thats it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>That’s it</h2>\n<p>Hope you enjoyed this post. It was fun for me playing around with containers.</p>\n<p>Given that there is not a clear winner yet, I think I’ll stick with Docker for now.</p>\n<p>Have a good one.</p>\n<p>Tomas</p>","fields":{"slug":"/posts/a-container-for-my-dbs","tagSlugs":["/tag/docker/","/tag/mysql/","/tag/databases/","/tag/benchmarks/"]},"frontmatter":{"date":"2019-01-18T17:59:00-03:00","description":"Benchmarking databases and containers.","tags":["docker","mysql","databases","benchmarks"],"title":"A Container for My Databases","socialImage":"/social/database.jpg"}}},"pageContext":{"slug":"/posts/a-container-for-my-dbs"}}}