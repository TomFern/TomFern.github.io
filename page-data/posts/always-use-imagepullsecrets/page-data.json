{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/always-use-imagepullsecrets","result":{"data":{"markdownRemark":{"id":"0905f85c-7425-503d-8aac-f218057e59c4","html":"<p>Docker Hub <a href=\"https://www.docker.com/increase-rate-limits\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">introduced rate limits</a> for image pulls earlier this month. Being the default registry for Docker images, this is one of the biggest in the ecosystem in the last few years, and it will affect not only Docker users but also Kubernetes setups.</p>\n<h2 id=\"the-limits\" style=\"position:relative;\"><a href=\"#the-limits\" aria-label=\"the limits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The limits</h2>\n<p>The new limits affect free users. No more unlimited free pulls, the party is over.</p>\n<ul>\n<li><strong>Anonymous free users</strong>: 100 container pulls every 6 hours.</li>\n<li><strong>Authenticated free users</strong>: 200 container pulls every 6 hours.</li>\n<li><strong>Paid accounts</strong>: unlimited.</li>\n</ul>\n<p>At first, 100 pulls may sound like a lot. But think what happens when you start a Kubernetes deployment. Each pod pulls independently: if you spin up a ReplicaSet with 100 replicas, that’s 100 pulls at once.</p>\n<p>The same thing happens when we’re doing a rolling update, a rollback, a canary release, or a blue-green deployment. As pods keep spawning, the chance of hitting the limit increases, and we face the most annoying of problems: random, unexpected, avoidable failures.</p>\n<h2 id=\"what-to-do\" style=\"position:relative;\"><a href=\"#what-to-do\" aria-label=\"what to do permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What to do?</h2>\n<p>What can you do? To see if you’re affected, check if you’re pulling images from Docker Hub with the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pods --all-namespaces -ojson <span class=\"token operator\">|</span> jq -r <span class=\"token string\">'.items[].spec | .containers[] // [] += .initContainers[] // [] | .image'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -u</code></pre></div>\n<p>If you see images with no registry (just the image name) or where the registry is <code class=\"language-text\">docker.io</code>, you’re pulling from Docker Hub, so keep reading.</p>\n<p>Next, check if you’re using authentication. All images should be pulled with authentication. Anonymous pulls are rate limited by IP. Even if you don’t need a lot of pulls, you may still be affected by other users sharing the network.</p>\n<p>The bright side is that adding authentication is really easy. It only takes two steps. Here’s how to do it.</p>\n<h3 id=\"step-1-tell-kubernetes-how-to-authenticate\" style=\"position:relative;\"><a href=\"#step-1-tell-kubernetes-how-to-authenticate\" aria-label=\"step 1 tell kubernetes how to authenticate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: tell Kubernetes how to authenticate</h3>\n<p>The first step is to add your Docker Hub username and password to the cluster. We can do this with kubectl. You only have to do this once per cluster.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create secret docker-registry my-dockerhub-account <span class=\"token punctuation\">\\</span>\n    --docker-server<span class=\"token operator\">=</span>docker.io <span class=\"token punctuation\">\\</span>\n    --docker-username<span class=\"token operator\">=</span>DOCKER_HUB_USERNAME <span class=\"token punctuation\">\\</span>\n    --docker-password<span class=\"token operator\">=</span>DOCKER_HUB_PASSWORD</code></pre></div>\n<h3 id=\"step-2-add-imagepullsecrets-in-the-deployment\" style=\"position:relative;\"><a href=\"#step-2-add-imagepullsecrets-in-the-deployment\" aria-label=\"step 2 add imagepullsecrets in the deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: add ImagePullSecrets in the deployment</h3>\n<p>Once the secret is safely stored in Kubernetes, we only need to mention it on the deployment manifest. For this, add <code class=\"language-text\">imagePullSecrets</code> in the <code class=\"language-text\">spec.template.spec</code> tree:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">      <span class=\"token key atrule\">imagePullSecrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>dockerhub<span class=\"token punctuation\">-</span>account</code></pre></div>\n<p>For example, if I want to run a deployment with three <a href=\"https://www.nginx.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nginx</a> pods, the end result would be:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>deployment\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">imagePullSecrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> my<span class=\"token punctuation\">-</span>dockerhub<span class=\"token punctuation\">-</span>secret\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>1.14.2\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>That’s all you need. When you have the chance, <code class=\"language-text\">kubectl apply</code> the new manifest to start using authentication.</p>\n<h2 id=\"better-safe-than-sorry\" style=\"position:relative;\"><a href=\"#better-safe-than-sorry\" aria-label=\"better safe than sorry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better safe than sorry</h2>\n<p>I hope this helps you to prevent avoidable errors. Once authenticated, you should have a more consistent experience and a higher limit. </p>\n<p>I’ve not heard of anyone hitting the limit yet. Docker Hub said they’ll enforce them gradually, so I’m sure it’s a matter of time until someone gets bitten by the new caps.</p>","fields":{"slug":"/posts/always-use-imagepullsecrets","tagSlugs":["/tag/docker/","/tag/kubernetes/"]},"frontmatter":{"date":"2020-11-14T07:00:00-03:00","description":"Kubernetes users: don't get bitten by rate limits.","tags":["docker","kubernetes"],"title":"Always use ImagePullSecrets","socialImage":"/social/writing.jpg"}}},"pageContext":{"slug":"/posts/always-use-imagepullsecrets"}},"staticQueryHashes":["251939775","2946977831","401334301"]}