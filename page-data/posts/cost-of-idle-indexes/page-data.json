{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cost-of-idle-indexes","result":{"data":{"markdownRemark":{"id":"0073e32f-c609-52da-a650-574ff9176c52","html":"<p>The last few days I’ve been <a href=\"./unused-index-cleanup\">cleaning up indexes</a>. This entails removing duplicate, unused or redundant indexes.</p>\n<p>There were quite a lot of indexes, so it was hard work. I knew why this was important to do:\nas the table changes, indexes need to be kept updated,\nless indexes means less updates and less wasted resources.</p>\n<p>But I wanted to have a real number to attach to the theory. How much benefit is there <em>really</em>? So I decided to run some simple benchmarks\nwith <a href=\"./sysbench-guide-2\">sysbench</a>.</p>\n<h2 id=\"the-test\" style=\"position:relative;\"><a href=\"#the-test\" aria-label=\"the test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Test</h2>\n<p>The test procedure is really simple:</p>\n<ol>\n<li>create a test table</li>\n<li>run the desired benchmark</li>\n<li>add an index</li>\n<li>repeat benchmark</li>\n</ol>\n<p>I started with 1 index (the primary key) and went up in 10 index increments. InnoDB supports up to 64 indexes per table.</p>\n<p>Each particular combination of test + number of indexes was run 3 times. On the plots\nwe’ll see the median, maximum and minimum values.</p>\n<p>Testing was done on MariaDB 10.3.12 running in a docker container.</p>\n<h2 id=\"bulk-insert\" style=\"position:relative;\"><a href=\"#bulk-insert\" aria-label=\"bulk insert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bulk Insert</h2>\n<p>Let’s start with multi-row inserts.\nThis test is entirely focused on writes, so the number of indexes should have a high impact.</p>\n<p><img src=\"/media/plots/cost-of-indexes/bulk_insert.png\" alt=\"Bulk insert. 1 thread\"></p>\n<p>RPS with 11 indexes is about 3 times slower. That’s a lot. 61 indexes perform the worst, almost 13 times worse.</p>\n<h2 id=\"oltp-write-only\" style=\"position:relative;\"><a href=\"#oltp-write-only\" aria-label=\"oltp write only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OLTP Write Only</h2>\n<p>This being a write only test, the number of indexes should still matter a lot.</p>\n<p><img src=\"/media/plots/cost-of-indexes/oltp_wo.png\" alt=\"OLTP Write Only. 1 thread\"></p>\n<p>11 indexes make transactions 40% slower. A considerable fall in performance. Worse case is a little bit less than 5 times slower.</p>\n<h2 id=\"oltp-readwrite\" style=\"position:relative;\"><a href=\"#oltp-readwrite\" aria-label=\"oltp readwrite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OLTP Read+Write</h2>\n<p>A mix of reads and writes.</p>\n<p><img src=\"/media/plots/cost-of-indexes/oltp_rw.png\" alt=\"OTLP Read+Write. 1 thread\"></p>\n<p>With 11 indexes there is only about a 10% reduction in TPS. This should be due the fact that read speed is less affected\nby extra indexes.</p>\n<h2 id=\"oltp-read-only\" style=\"position:relative;\"><a href=\"#oltp-read-only\" aria-label=\"oltp read only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OLTP Read Only</h2>\n<p>Why does the number of indexes affect read speed?\nWell, for one thing the query optimizer needs to check all the indexes on a table (even if they are duplicate),\nalso there’s some additional I/O required. So there is a cost, but it should be minimal.</p>\n<p>Let’s see if it shows in the test.\n<img src=\"/media/plots/cost-of-indexes/oltp_ro.png\" alt=\"OTLP Read Only. 1 thread\"></p>\n<p>As expected, TPS does depend on the number of indexes. Compared with previous tests, however, the impact is low:\nthe worst case, having 61 indexes means a 7% reduction in transaction speed.</p>\n<h2 id=\"related-links\" style=\"position:relative;\"><a href=\"#related-links\" aria-label=\"related links permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Links</h2>\n<ul>\n<li>benchmark data: <a href=\"https://github.com/TomFern/benchmark-data/tree/master/cost-of-idle-indexes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/TomFern/benchmark-data/tree/master/cost-of-idle-indexes</a></li>\n</ul>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>No major discoveries here. Everything lines up with what we could have expected. It would be interesting\nto repeat the tests with higher a resolution between the first 15 or so indexes. Which, frankly,\nis much more common than having 60+.</p>\n<p>Bye.</p>\n<p>Tomas</p>","fields":{"slug":"/posts/cost-of-idle-indexes","tagSlugs":["/tag/mysql/","/tag/benchmarks/"]},"frontmatter":{"date":"2019-01-16T12:36:00-03:00","description":"A simple benchmark to assess the cost of unused indexes on MariaDB.","tags":["mysql","benchmarks"],"title":"The Cost of Idle Indexes","socialImage":"/social/database.jpg"}}},"pageContext":{"slug":"/posts/cost-of-idle-indexes"}},"staticQueryHashes":["251939775","2946977831","401334301"]}