{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/mysqlslap-guide-1","result":{"data":{"markdownRemark":{"id":"59b4a405-300f-5ea9-aae8-674820b44c39","html":"<p>There are loads of ways to benchmark MySQL. <code class=\"language-text\">mysqlslap</code> was, I believe, one of the first official tools for this. It’s bundled with the client tools for MySQL and MariaDB,\nso you probably already have it installed.</p>\n<p>In this post I’ll cover the basics and the <em>auto generate sql</em> mode, be sure to read the <a href=\"./mysqlslap-guide-2\">second part</a> about other ways to use it.</p>\n<h2 id=\"how-does-it-work\" style=\"position:relative;\"><a href=\"#how-does-it-work\" aria-label=\"how does it work permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How Does It Work?</h2>\n<p>mysqlslap uses the same connection parameters as the normal mysql client, so <code class=\"language-text\">--host</code> <code class=\"language-text\">--port</code> <code class=\"language-text\">--socket</code> <code class=\"language-text\">--username</code> <code class=\"language-text\">--password</code> all work\n(but strangely the <code class=\"language-text\">--defaults-file</code> doesn’t).</p>\n<p>In the examples below, however, the parameters <em>will be omitted</em> for brevity’s sake.</p>\n<p>mysqlslap works in 3 stages:</p>\n<ol>\n<li>create test schema</li>\n<li>run test as multiple clients</li>\n<li>delete test schema.</li>\n</ol>\n<p>The first and last are executed as a single connection, only in the middle step time is measured.</p>\n<h2 id=\"auto-generate-sql\" style=\"position:relative;\"><a href=\"#auto-generate-sql\" aria-label=\"auto generate sql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Auto Generate Sql</h2>\n<p>In auto generate sql mode, mysqlslap will handle table and queries. No need to write any SQL.</p>\n<p>This mode activated with <code class=\"language-text\">--auto-generate-sql</code> (or in short form: <code class=\"language-text\">-a</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"nil\"><pre class=\"language-nil\"><code class=\"language-nil\">-&gt; mysqlslap --auto-generate-sql --auto-generate-sql-load-type=read --auto-generate-sql-execute-number=10\nBenchmark\n        Average number of seconds to run all queries: 0.004 seconds\n        Minimum number of seconds to run all queries: 0.004 seconds\n        Maximum number of seconds to run all queries: 0.004 seconds\n        Number of clients running queries: 1\n        Average number of queries per client: 10</code></pre></div>\n<p>What happened?</p>\n<ol>\n<li>The <code class=\"language-text\">mysqlslap</code> schema was created</li>\n<li>A test table <code class=\"language-text\">t1</code> was created. It has 1 integer and 1 varchar(128) column, no explicit primary key</li>\n<li>The table was populated with random rows</li>\n<li>A full table SELECT is run 10 times, sequentially, from a single connection</li>\n<li>The <code class=\"language-text\">mysqlslap</code> schema is dropped</li>\n<li>The total time taken reported</li>\n</ol>\n<p>Let’s break down the options:</p>\n<ul>\n<li><code class=\"language-text\">--auto-generate-sql-load-type</code> what is the test type to run</li>\n<li><code class=\"language-text\">--auto-generate-sql-execute-number</code> how many queries to execute per client</li>\n</ul>\n<p>What is different about this next one?</p>\n<div class=\"gatsby-highlight\" data-language=\"nil\"><pre class=\"language-nil\"><code class=\"language-nil\"># simulating 10 clients\n-&gt; mysqlslap --auto-generate-sql --auto-generate-sql-load-type=read --auto-generate-sql-execute-number=1 --concurrency=10\nBenchmark\n        Average number of seconds to run all queries: 0.015 seconds\n        Minimum number of seconds to run all queries: 0.015 seconds\n        Maximum number of seconds to run all queries: 0.015 seconds\n        Number of clients running queries: 10\n        Average number of queries per client: 1</code></pre></div>\n<p>This one runs the same total number of SELECTs as before, however it does it in parallel.\nThere are 10 clients running the a single query. We get the total taken to run the 10 queries.</p>\n<p>Did you notice the times reported? Why is it that we get the same values for average, max and min?\nThis is because so far we ran the test only 1 time. We can choose to repeat the test using then <code class=\"language-text\">--iterations</code> parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"nil\"><pre class=\"language-nil\"><code class=\"language-nil\"># 100 iterations, 10 clients\n-&gt; mysqlslap --auto-generate-sql --auto-generate-sql-load-type=read --auto-generate-sql-execute-number=1 --concurrency=10 --iterations=100\nBenchmark\n        Average number of seconds to run all queries: 0.006 seconds\n        Minimum number of seconds to run all queries: 0.001 seconds\n        Maximum number of seconds to run all queries: 0.015 seconds\n        Number of clients running queries: 10\n        Average number of queries per client: 1</code></pre></div>\n<p>What changed?\nEssentially the whole thing (schema created and dropped) is done 100 times.\nNow times are different because we added some variability.</p>\n<h2 id=\"what-other-things-can-it-do\" style=\"position:relative;\"><a href=\"#what-other-things-can-it-do\" aria-label=\"what other things can it do permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What Other Things Can It Do?</h2>\n<p>We can try other types of tests, <code class=\"language-text\">--auto-generate-sql-load-type</code> can be:</p>\n<ul>\n<li>read: <code class=\"language-text\">SELECT * FROM table</code></li>\n<li>write: <code class=\"language-text\">INSERT</code></li>\n<li>key: <code class=\"language-text\">SELECT (primary keys columns)</code></li>\n<li>update: <code class=\"language-text\">UPDATE (primary keys)</code></li>\n<li>mixed: <code class=\"language-text\">INSERT INTO table; SELECT * FROM table</code></li>\n</ul>\n<p>The mixed mode is the default, it generates 2 queries and both count towards the <code class=\"language-text\">--auto-generate-sql-execute-number</code></p>\n<div class=\"gatsby-highlight\" data-language=\"nil\"><pre class=\"language-nil\"><code class=\"language-nil\">-&gt; mysqlslap --auto-generate-sql --auto-generate-sql-execute-number=10\nBenchmark\n        Average number of seconds to run all queries: 0.006 seconds\n        Minimum number of seconds to run all queries: 0.006 seconds\n        Maximum number of seconds to run all queries: 0.006 seconds\n        Number of clients running queries: 1\n        Average number of queries per client: 10</code></pre></div>\n<p>Since we asked to generate 10 queries, mysqlslap ran 5 INSERTS and 5 SELECTs. We get the total time to run all the queries.</p>\n<p>The generated table can be tweaked with the following options:</p>\n<ul>\n<li><code class=\"language-text\">--number-char-cols</code> number of varchar columns (1)</li>\n<li><code class=\"language-text\">--number-int-cols</code> number of integer columns (1)</li>\n<li><code class=\"language-text\">--auto-generate-sql-guid-primary</code> add a varchar(36) primary column (none)</li>\n<li><code class=\"language-text\">--auto-generate-sql-add-autoincrement</code> add an auto-increment bigint column with an unique index (none)</li>\n<li><code class=\"language-text\">--auto-generate-sql-secondary-indexes</code> generate n integer columns with unique indexes (0)</li>\n</ul>\n<p>The table row distribution can be further tweaked with:</p>\n<ul>\n<li><code class=\"language-text\">--auto-generate-sql-write-number</code> how many rows to insert into test table (100)</li>\n<li><code class=\"language-text\">--auto-generate-sql-unique-query-number</code> how many unique rows, so we can play with cardinality (10)</li>\n</ul>\n<p>Other commonly used options are:</p>\n<ul>\n<li><code class=\"language-text\">-vv</code> show verbose output</li>\n<li><code class=\"language-text\">--csv</code> output into CSV file</li>\n<li><code class=\"language-text\">--no-drop</code> don’t drop the schema when done</li>\n<li><code class=\"language-text\">--create-schema</code> use a different test schema name</li>\n</ul>\n<h2 id=\"related-links\" style=\"position:relative;\"><a href=\"#related-links\" aria-label=\"related links permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Links</h2>\n<ul>\n<li>MariaDB’s mysqlslap: <a href=\"https://mariadb.com/kb/en/library/mysqlslap/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://mariadb.com/kb/en/library/mysqlslap/</a></li>\n<li>MySQL’s mysqlslap: <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqlslap.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dev.mysql.com/doc/refman/8.0/en/mysqlslap.html</a></li>\n</ul>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>mysqlslap is, arguably, a simple benchmark tool, but sometimes simpler is better.</p>\n<p>And since we can almost always count on having it installed it’s a good idea to get familiarized with it.</p>\n<p>The <a href=\"./mysqlslap-guide-2\">next part</a> will cover the query mode.</p>","fields":{"slug":"/posts/mysqlslap-guide-1","tagSlugs":["/tag/mysql/","/tag/guides/"]},"frontmatter":{"date":"2019-01-08T00:20:00-03:00","description":"A guide to benchmarking with mysqlslap.","tags":["mysql","guides"],"title":"MySQLSlap (part 1)","socialImage":"/social/linux.jpg"}}},"pageContext":{"slug":"/posts/mysqlslap-guide-1"}}}