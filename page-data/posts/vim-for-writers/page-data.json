{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/vim-for-writers","result":{"data":{"markdownRemark":{"id":"9dc46f11-8e1c-51a7-b4f2-967f1ce6cc4e","html":"<p>I still remember the first time I came in contact with Vim; it was during my very first job. It was a part-time gig in a government office. A few months in, they decided to go open-source full in. Out the window went Windows and in came Linux. At the time, I was doing PHP development, and I was sorry to have to let go of my dear Dreamweaver.</p>\n<p>I decided that if I had to work on Linux, I would go all the way, no compromises for me. That meant getting used to working on the console and learning Vim.</p>\n<p>When one of the resident Linux gurus walked by my seat and saw my screen, he said, “Are you using Vi? Maybe you’re not so useless after all.” (Funny story, I came across him on facebook the other day. Now that he’s bald, he doesn’t look intimidating at all).</p>\n<p>Lately, I’ve been writing a lot. I found that armed with the right plugins, Vim is a great tool writing:</p>\n<ul>\n<li><strong>vim-pencil</strong>: my favorite writing plugin. <a href=\"https://github.com/reedes/vim-pencil\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vim-pencil</a> brings a ton of nice things like navigation aids, smarter undo based on punctuation, and proper soft wrapping.</li>\n<li><strong>vim-ditto</strong>: <a href=\"https://github.com/dbmrq/vim-ditto\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ditto</a> highlights repeated words in a paragraph, just what I need to avoid repeating words all the time.</li>\n<li><strong>vim-goyo</strong>: a Writeroom lookalike for Vim, <a href=\"https://github.com/junegunn/goyo.vim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">goyo</a> removes all distracting elements like modeline and line numbers.</li>\n<li><strong>vim-colors-pencil</strong>: an elegant, low contrast <a href=\"https://github.com/reedes/vim-colors-pencil\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">colorscheme</a> geared towards writing.</li>\n<li><strong>vim-litecorrect</strong>: <a href=\"https://github.com/reedes/vim-litecorrect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">litecorrect</a> automatically corrects common typing errors like “teh” instead of “the”.</li>\n<li><strong>vim-lexical</strong>: combined spellchecker and thesaurus. <a href=\"https://github.com/reedes/vim-lexical\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vim-lexical</a> lets me navigate between spell errors with <code class=\"language-text\">]s</code>, <code class=\"language-text\">[s</code> and quickly find synonyms with <code class=\"language-text\">&lt;leader&gt; t</code></li>\n<li><strong>vim-textobj-sentence</strong>: a <a href=\"https://github.com/reedes/vim-textobj-sentence\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">plugin</a> for better sentence navigation. I can move between sentences with <code class=\"language-text\">(</code> and <code class=\"language-text\">)</code>, I can cut a sentence with <code class=\"language-text\">dis</code>. Depends on <a href=\"https://github.com/kana/vim-textobj-user\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vim-textobj-user</a>.</li>\n<li><strong>vim-textobj-quote</strong>: this <a href=\"https://github.com/reedes/vim-textobj-quote\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">plugin</a> smartly creates “quotes” so I don’t have to.</li>\n<li><strong>ALE</strong>: the <a href=\"https://github.com/dense-analysis/ale\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Asynchronous Lint Engine</a> is a polyglot analysis tool that is not limited to code. It supports a bunch of style checkers like <a href=\"http://proselint.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">proselint</a> and <a href=\"https://languagetool.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LanguageTool</a>.</li>\n<li><strong>vim-orgmode</strong>: I’ll admit that, before I saw the errors of my ways, I communed with <a href=\"https://https://www.gnu.org/software/emacs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the one that should not be named</a>. During the time I used Emacs, I never fully switched away from Vim, that alone should have told me something.</li>\n</ul>\n<p>For my labors, I gained something invaluable: I found <a href=\"https://orgmode.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Org mode</a>. For me, Org-mode is the most intuitive and straightforward way of interacting with text. This filetype <a href=\"https://github.com/jceb/vim-orgmode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">plugin</a> only implements a subset of all its features, but even so, it’s good enough for my purposes.</p>\n<p>While not Vim-related, I also find these tools irreplaceable in my workflow:</p>\n<ul>\n<li><a href=\"https://pandoc.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pandoc</a>: a command-line markup converter. Supports dozens of formats, including Org-mode and markdown. I usually write in Org and then export to the target type.</li>\n<li><a href=\"https://daringfireball.net/projects/titlecase/TitleCase.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TitleCase.pl</a>: John Gruber’s title case Perl script. I haven’t found a good native Title Case plugin for Vim, so I just use a <code class=\"language-text\">!TitleCase.pl</code> filter.</li>\n<li><a href=\"https://github.com/joeyespo/grip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">grip</a>: view local Markdown files with GitHub renderer. I use it to preview how my files will look before pushing them.</li>\n</ul>\n<!--\n- Grammarly: a life saver, I love it so much I subscribed to the premium plan. Even on the free tier, it’s so good to spot common mistakes other checkers will miss. It not perfect, but works well with markdown and org-mode content.\n- [Hemingway App](http://www.hemingwayapp.com/): I’m trying this one out. It marks words and sentences that can be\n-->\n<!--\nI don’t think I’m going to move away from Vim anymore. I tried most of the other editors: Visual Studio Code, Atom, Sublime Text, Eclipse, and lots more. They just don’t feel as satisfying to work with as Vim.\n-->\n<p>Happy writing!</p>\n<p>Tomas</p>","fields":{"slug":"/posts/vim-for-writers","tagSlugs":["/tag/productivity/","/tag/writing/","/tag/vim/"]},"frontmatter":{"date":"2019-12-15T14:04:00-03:00","description":"A text editor is so much more than mere software.","tags":["productivity","writing","vim"],"title":"10 Vim Plugins for Writers","socialImage":"/social/writing.jpg"}}},"pageContext":{"slug":"/posts/vim-for-writers"}}}