<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>case-study on Chaos is order not yet deciphered</title><link>/tags/case-study/</link><description>Recent content in case-study on Chaos is order not yet deciphered</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Mar 2019 15:29:00 -0300</lastBuildDate><atom:link href="/tags/case-study/index.xml" rel="self" type="application/rss+xml"/><item><title>Case study: MariaDB ColumnStore</title><link>/posts/case-study-mariadb-columnstore/</link><pubDate>Mon, 04 Mar 2019 15:29:00 -0300</pubDate><guid>/posts/case-study-mariadb-columnstore/</guid><description>A recent project I worked on provided an opportunity to work with MariaDB ColumnStore.
The Product ðŸ”—The product is a business intelligence application. Its main view, a very comprehensive dashboard with an abundance of counters, showing all operational aspects: from server status, database backups, support tickets and SLA to datacenter atmospheric conditions.
In the middle of all this: several MariaDB databases fed through multiple ETL jobs.
As the application grew, the dashboard got increasingly more intricate.</description></item></channel></rss>